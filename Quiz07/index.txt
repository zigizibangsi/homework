// 1. 도커 단답형 퀴즈

// 도커 이미지 빌드하기
1-1) 도커 이미지를 build 하는 명령어는 무엇인가요?
// docker build .

1-2) build 한 이미지를 확인하는 명령어는 무엇인가요?
// docker images

// 도커 이미지 실행/제거하기
1-1) 이미지를 실행하는 명령어는 무엇인가요?
// docker run 이미지ID => ex) docker run 2e7a05ce7683 

1-2) 종료된 컨테이너를 포함한 모든 컨테이너의 목록을 보는 명령어는 무엇인가요?
// docker ps -a

1-3) 실행 중인 컨테이너를 중지하는 명령어는 무엇인가요?
// docker stop 컨테이너ID

1-4) 종료된 컨테이너를 삭제하는 명령어는 무엇인가요?
// docker rm 컨테이너ID

1-5) 이미지를 삭제하는 명령어는 무엇인가요?
// docker rmi 이미지ID

// 도커에서 Node.js 서버 실행하기
1-1) 엔드 포인트를 제대로 수정해 주세요.
// 엔드포인트:  http://localhost:3000/boards 

1-2) 실행 중인 도커를 중단하고 포트포워딩을 좀 수정해서 다시 도커를 실행해 주려고 합니다. 철수는 어떻게 도커를 실행해야 할까요?
// docker run -p 2000:3000 2e7a05ce7683  

1-3) 철수가 소스코드를 아래와 같이 수정했다면, 철수는 어떻게 도커를 실행해야 할까요?
// docker run -p 2000:8000 2e7a05ce7683 

// 도커 내부에 접속하기
1-1) 도커 내부에 접속하는 명령어는 무엇인가요?
// docker exec -it 컨테이너ID /bin/bash => ex) docker exec -it 2bd25dc4230a /bin/bash

1-2) vscode에서 index.js의 파일을 약간 수정하였습니다. 이때, 도커 내부의 파일도 수정이 될까요?
// 아니요.

1-3) vscode에서 yarn add 명령을 이용하여 특정 패키지를 하나 설치하였습니다. 이때, 도커 내부에도 패키지가 설치될까요?
// 아니요.

// 2. 도커 서술식 퀴즈
1-1) 두 도커 파일의 차이점은 무엇인가요?
// Docker는 Dockerfile을 보면서 명령어를 한줄씩 실행하다가 기존 내용에서 변경된 점이 없으면 새로 build 하지 않고 먼저 생성된 캐시 부분을 가져와 사용하고,
아니라면 그 부분부터 새로 build 합니다.
따라서, index.js 파일만 수정했다면 오른쪽 Dockerfile의 경우 모듈을 새로 설치하지 않아, 효율적으로 사용할 수 있습니다.